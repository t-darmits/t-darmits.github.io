// SCSS variables are information about icon's compiled state, stored under its original file name
//
// .icon-home {
//   width: $icon-home-width;
// }
//
// The large array-like variables contain all information about a single icon
// $icon-home: x y offset_x offset_y width height total_width total_height image_path;
//
// At the bottom of this section, we provide information about the spritesheet itself
// $spritesheet: width height image $spritesheet-sprites;
$i-check-empty-name: 'i-check-empty';
$i-check-empty-x: 0px;
$i-check-empty-y: 13px;
$i-check-empty-offset-x: 0px;
$i-check-empty-offset-y: -13px;
$i-check-empty-width: 30px;
$i-check-empty-height: 30px;
$i-check-empty-total-width: 163px;
$i-check-empty-total-height: 69px;
$i-check-empty-image: '../img/sprite.png';
$i-check-empty: (0px, 13px, 0px, -13px, 30px, 30px, 163px, 69px, '../img/sprite.png', 'i-check-empty', );
$i-check-fill-name: 'i-check-fill';
$i-check-fill-x: 33px;
$i-check-fill-y: 13px;
$i-check-fill-offset-x: -33px;
$i-check-fill-offset-y: -13px;
$i-check-fill-width: 30px;
$i-check-fill-height: 30px;
$i-check-fill-total-width: 163px;
$i-check-fill-total-height: 69px;
$i-check-fill-image: '../img/sprite.png';
$i-check-fill: (33px, 13px, -33px, -13px, 30px, 30px, 163px, 69px, '../img/sprite.png', 'i-check-fill', );
$i-double-arr-down-name: 'i-double-arr-down';
$i-double-arr-down-x: 101px;
$i-double-arr-down-y: 26px;
$i-double-arr-down-offset-x: -101px;
$i-double-arr-down-offset-y: -26px;
$i-double-arr-down-width: 11px;
$i-double-arr-down-height: 11px;
$i-double-arr-down-total-width: 163px;
$i-double-arr-down-total-height: 69px;
$i-double-arr-down-image: '../img/sprite.png';
$i-double-arr-down: (101px, 26px, -101px, -26px, 11px, 11px, 163px, 69px, '../img/sprite.png', 'i-double-arr-down', );
$i-double-arr-right-name: 'i-double-arr-right';
$i-double-arr-right-x: 66px;
$i-double-arr-right-y: 13px;
$i-double-arr-right-offset-x: -66px;
$i-double-arr-right-offset-y: -13px;
$i-double-arr-right-width: 36px;
$i-double-arr-right-height: 10px;
$i-double-arr-right-total-width: 163px;
$i-double-arr-right-total-height: 69px;
$i-double-arr-right-image: '../img/sprite.png';
$i-double-arr-right: (66px, 13px, -66px, -13px, 36px, 10px, 163px, 69px, '../img/sprite.png', 'i-double-arr-right', );
$i-double-arr-name: 'i-double-arr';
$i-double-arr-x: 105px;
$i-double-arr-y: 13px;
$i-double-arr-offset-x: -105px;
$i-double-arr-offset-y: -13px;
$i-double-arr-width: 33px;
$i-double-arr-height: 10px;
$i-double-arr-total-width: 163px;
$i-double-arr-total-height: 69px;
$i-double-arr-image: '../img/sprite.png';
$i-double-arr: (105px, 13px, -105px, -13px, 33px, 10px, 163px, 69px, '../img/sprite.png', 'i-double-arr', );
$i-down-arr-name: 'i-down-arr';
$i-down-arr-x: 0px;
$i-down-arr-y: 46px;
$i-down-arr-offset-x: 0px;
$i-down-arr-offset-y: -46px;
$i-down-arr-width: 10px;
$i-down-arr-height: 23px;
$i-down-arr-total-width: 163px;
$i-down-arr-total-height: 69px;
$i-down-arr-image: '../img/sprite.png';
$i-down-arr: (0px, 46px, 0px, -46px, 10px, 23px, 163px, 69px, '../img/sprite.png', 'i-down-arr', );
$i-grey-arr-right-name: 'i-grey-arr-right';
$i-grey-arr-right-x: 141px;
$i-grey-arr-right-y: 13px;
$i-grey-arr-right-offset-x: -141px;
$i-grey-arr-right-offset-y: -13px;
$i-grey-arr-right-width: 5px;
$i-grey-arr-right-height: 9px;
$i-grey-arr-right-total-width: 163px;
$i-grey-arr-right-total-height: 69px;
$i-grey-arr-right-image: '../img/sprite.png';
$i-grey-arr-right: (141px, 13px, -141px, -13px, 5px, 9px, 163px, 69px, '../img/sprite.png', 'i-grey-arr-right', );
$i-long-arr-name: 'i-long-arr';
$i-long-arr-x: 0px;
$i-long-arr-y: 0px;
$i-long-arr-offset-x: 0px;
$i-long-arr-offset-y: 0px;
$i-long-arr-width: 163px;
$i-long-arr-height: 10px;
$i-long-arr-total-width: 163px;
$i-long-arr-total-height: 69px;
$i-long-arr-image: '../img/sprite.png';
$i-long-arr: (0px, 0px, 0px, 0px, 163px, 10px, 163px, 69px, '../img/sprite.png', 'i-long-arr', );
$i-pink-right-arr-name: 'i-pink-right-arr';
$i-pink-right-arr-x: 66px;
$i-pink-right-arr-y: 26px;
$i-pink-right-arr-offset-x: -66px;
$i-pink-right-arr-offset-y: -26px;
$i-pink-right-arr-width: 32px;
$i-pink-right-arr-height: 11px;
$i-pink-right-arr-total-width: 163px;
$i-pink-right-arr-total-height: 69px;
$i-pink-right-arr-image: '../img/sprite.png';
$i-pink-right-arr: (66px, 26px, -66px, -26px, 32px, 11px, 163px, 69px, '../img/sprite.png', 'i-pink-right-arr', );
$spritesheet-width: 163px;
$spritesheet-height: 69px;
$spritesheet-image: '../img/sprite.png';
$spritesheet-sprites: ($i-check-empty, $i-check-fill, $i-double-arr-down, $i-double-arr-right, $i-double-arr, $i-down-arr, $i-grey-arr-right, $i-long-arr, $i-pink-right-arr, );
$spritesheet: (163px, 69px, '../img/sprite.png', $spritesheet-sprites, );

// The provided mixins are intended to be used with the array-like variables
//
// .icon-home {
//   @include sprite-width($icon-home);
// }
//
// .icon-email {
//   @include sprite($icon-email);
// }
//
// Example usage in HTML:
//
// `display: block` sprite:
// <div class="icon-home"></div>
//
// To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:
//
// // CSS
// .icon {
//   display: inline-block;
// }
//
// // HTML
// <i class="icon icon-home"></i>
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

// The `sprites` mixin generates identical output to the CSS template
//   but can be overridden inside of SCSS
//
// @include sprites($spritesheet-sprites);
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
