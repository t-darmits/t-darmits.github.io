// SCSS variables are information about icon's compiled state, stored under its original file name
//
// .icon-home {
//   width: $icon-home-width;
// }
//
// The large array-like variables contain all information about a single icon
// $icon-home: x y offset_x offset_y width height total_width total_height image_path;
//
// At the bottom of this section, we provide information about the spritesheet itself
// $spritesheet: width height image $spritesheet-sprites;
$i-avto-name: 'i-avto';
$i-avto-x: 0px;
$i-avto-y: 0px;
$i-avto-offset-x: 0px;
$i-avto-offset-y: 0px;
$i-avto-width: 53px;
$i-avto-height: 24px;
$i-avto-total-width: 95px;
$i-avto-total-height: 61px;
$i-avto-image: '../img/sprite.png';
$i-avto: (0px, 0px, 0px, 0px, 53px, 24px, 95px, 61px, '../img/sprite.png', 'i-avto', );
$i-grey-arr-left-hover-name: 'i-grey-arr-left-hover';
$i-grey-arr-left-hover-x: 32px;
$i-grey-arr-left-hover-y: 27px;
$i-grey-arr-left-hover-offset-x: -32px;
$i-grey-arr-left-hover-offset-y: -27px;
$i-grey-arr-left-hover-width: 18px;
$i-grey-arr-left-hover-height: 34px;
$i-grey-arr-left-hover-total-width: 95px;
$i-grey-arr-left-hover-total-height: 61px;
$i-grey-arr-left-hover-image: '../img/sprite.png';
$i-grey-arr-left-hover: (32px, 27px, -32px, -27px, 18px, 34px, 95px, 61px, '../img/sprite.png', 'i-grey-arr-left-hover', );
$i-grey-arr-left-name: 'i-grey-arr-left';
$i-grey-arr-left-x: 56px;
$i-grey-arr-left-y: 0px;
$i-grey-arr-left-offset-x: -56px;
$i-grey-arr-left-offset-y: 0px;
$i-grey-arr-left-width: 18px;
$i-grey-arr-left-height: 34px;
$i-grey-arr-left-total-width: 95px;
$i-grey-arr-left-total-height: 61px;
$i-grey-arr-left-image: '../img/sprite.png';
$i-grey-arr-left: (56px, 0px, -56px, 0px, 18px, 34px, 95px, 61px, '../img/sprite.png', 'i-grey-arr-left', );
$i-metro-name: 'i-metro';
$i-metro-x: 0px;
$i-metro-y: 27px;
$i-metro-offset-x: 0px;
$i-metro-offset-y: -27px;
$i-metro-width: 29px;
$i-metro-height: 34px;
$i-metro-total-width: 95px;
$i-metro-total-height: 61px;
$i-metro-image: '../img/sprite.png';
$i-metro: (0px, 27px, 0px, -27px, 29px, 34px, 95px, 61px, '../img/sprite.png', 'i-metro', );
$i-walk-name: 'i-walk';
$i-walk-x: 77px;
$i-walk-y: 0px;
$i-walk-offset-x: -77px;
$i-walk-offset-y: 0px;
$i-walk-width: 18px;
$i-walk-height: 28px;
$i-walk-total-width: 95px;
$i-walk-total-height: 61px;
$i-walk-image: '../img/sprite.png';
$i-walk: (77px, 0px, -77px, 0px, 18px, 28px, 95px, 61px, '../img/sprite.png', 'i-walk', );
$spritesheet-width: 95px;
$spritesheet-height: 61px;
$spritesheet-image: '../img/sprite.png';
$spritesheet-sprites: ($i-avto, $i-grey-arr-left-hover, $i-grey-arr-left, $i-metro, $i-walk, );
$spritesheet: (95px, 61px, '../img/sprite.png', $spritesheet-sprites, );

// The provided mixins are intended to be used with the array-like variables
//
// .icon-home {
//   @include sprite-width($icon-home);
// }
//
// .icon-email {
//   @include sprite($icon-email);
// }
//
// Example usage in HTML:
//
// `display: block` sprite:
// <div class="icon-home"></div>
//
// To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:
//
// // CSS
// .icon {
//   display: inline-block;
// }
//
// // HTML
// <i class="icon icon-home"></i>
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

// The `sprites` mixin generates identical output to the CSS template
//   but can be overridden inside of SCSS
//
// @include sprites($spritesheet-sprites);
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
